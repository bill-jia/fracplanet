#############################################################################
# Makefile for building: fracplanet
# Generated by qmake (2.01a) (Qt 4.8.6) on: Mon Sep 26 22:10:13 2016
# Project:  fracplanet.pro
# Template: app
# Command: /usr/bin/qmake-qt4 VERSION_NUMBER=0.4.1 -o Makefile fracplanet.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_DLL -DQT_NO_DEBUG -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -O2 -DNDEBUG -D_REENTRANT -Wall -W $(DEFINES)
CXXFLAGS      = -m64 -pipe -O2 -DFRACPLANET_VERSION="0.4.1" -DFRACPLANET_BUILD="0.4.1 (release build)" -DNDEBUG -DQT_NO_ASCII_CAST -D_REENTRANT -Wall -W $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtOpenGL -I/usr/include/qt4 -I/usr/X11R6/include -Imoc
LINK          = g++
LFLAGS        = -m64 -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu -L/usr/X11R6/lib64 -lboost_program_options -lGLU -lQtOpenGL -lQtGui -lQtCore -lGL -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = obj/

####### Files

SOURCES       = common.cpp \
		control_about.cpp \
		control.cpp \
		control_render.cpp \
		control_save.cpp \
		control_terrain.cpp \
		dialog_documentation.cpp \
		fracplanet.cpp \
		fracplanet_main.cpp \
		geometry.cpp \
		image.cpp \
		license.cpp \
		matrix33.cpp \
		matrix34.cpp \
		noise.cpp \
		parameters_cloud.cpp \
		parameters_noise.cpp \
		parameters_object.cpp \
		parameters_render.cpp \
		parameters_save.cpp \
		parameters_terrain.cpp \
		progress.cpp \
		random.cpp \
		rgb.cpp \
		scan.cpp \
		spinbox.cpp \
		triangle.cpp \
		triangle_edge.cpp \
		triangle_mesh_cloud.cpp \
		triangle_mesh.cpp \
		triangle_mesh_terrain.cpp \
		triangle_mesh_viewer.cpp \
		triangle_mesh_viewer_display.cpp \
		vertex.cpp \
		xyz.cpp moc/moc_control_about.cpp \
		moc/moc_control_render.cpp \
		moc/moc_control_save.cpp \
		moc/moc_control_terrain.cpp \
		moc/moc_dialog_documentation.cpp \
		moc/moc_fracplanet_main.cpp \
		moc/moc_triangle_mesh_viewer_display.cpp \
		moc/moc_triangle_mesh_viewer.cpp
OBJECTS       = obj/common.o \
		obj/control_about.o \
		obj/control.o \
		obj/control_render.o \
		obj/control_save.o \
		obj/control_terrain.o \
		obj/dialog_documentation.o \
		obj/fracplanet.o \
		obj/fracplanet_main.o \
		obj/geometry.o \
		obj/image.o \
		obj/license.o \
		obj/matrix33.o \
		obj/matrix34.o \
		obj/noise.o \
		obj/parameters_cloud.o \
		obj/parameters_noise.o \
		obj/parameters_object.o \
		obj/parameters_render.o \
		obj/parameters_save.o \
		obj/parameters_terrain.o \
		obj/progress.o \
		obj/random.o \
		obj/rgb.o \
		obj/scan.o \
		obj/spinbox.o \
		obj/triangle.o \
		obj/triangle_edge.o \
		obj/triangle_mesh_cloud.o \
		obj/triangle_mesh.o \
		obj/triangle_mesh_terrain.o \
		obj/triangle_mesh_viewer.o \
		obj/triangle_mesh_viewer_display.o \
		obj/vertex.o \
		obj/xyz.o \
		obj/moc_control_about.o \
		obj/moc_control_render.o \
		obj/moc_control_save.o \
		obj/moc_control_terrain.o \
		obj/moc_dialog_documentation.o \
		obj/moc_fracplanet_main.o \
		obj/moc_triangle_mesh_viewer_display.o \
		obj/moc_triangle_mesh_viewer.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		fracplanet.pro
QMAKE_TARGET  = fracplanet
DESTDIR       = 
TARGET        = fracplanet

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c -include obj/fracplanet $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c -include obj/fracplanet $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c -include obj/fracplanet $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c -include obj/fracplanet $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c -include obj/fracplanet $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: fracplanet.pro  /usr/share/qt4/mkspecs/linux-g++-64/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/x86_64-linux-gnu/libQtOpenGL.prl \
		/usr/lib/x86_64-linux-gnu/libQtGui.prl \
		/usr/lib/x86_64-linux-gnu/libQtCore.prl
	$(QMAKE) VERSION_NUMBER=0.4.1 -o Makefile fracplanet.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/opengl.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/shared.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/x86_64-linux-gnu/libQtOpenGL.prl:
/usr/lib/x86_64-linux-gnu/libQtGui.prl:
/usr/lib/x86_64-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) VERSION_NUMBER=0.4.1 -o Makefile fracplanet.pro

dist: 
	@$(CHK_DIR_EXISTS) obj/fracplanet0.4.1 || $(MKDIR) obj/fracplanet0.4.1 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) obj/fracplanet0.4.1/ && $(COPY_FILE) --parents common.h control_about.h control.h control_render.h control_save.h control_terrain.h dialog_documentation.h fracplanet_main.h geometry.h image.h license.h matrix33.h matrix34.h noise.h parameters_cloud.h parameters_noise.h parameters_object.h parameters_render.h parameters_save.h parameters_terrain.h precompiled.h progress.h random.h rgb.h scan.h spinbox.h triangle_edge.h triangle.h triangle_mesh_cloud.h triangle_mesh.h triangle_mesh_terrain.h triangle_mesh_viewer_display.h triangle_mesh_viewer.h usage_text.h vertex.h xyz.h obj/fracplanet0.4.1/ && $(COPY_FILE) --parents common.cpp control_about.cpp control.cpp control_render.cpp control_save.cpp control_terrain.cpp dialog_documentation.cpp fracplanet.cpp fracplanet_main.cpp geometry.cpp image.cpp license.cpp matrix33.cpp matrix34.cpp noise.cpp parameters_cloud.cpp parameters_noise.cpp parameters_object.cpp parameters_render.cpp parameters_save.cpp parameters_terrain.cpp progress.cpp random.cpp rgb.cpp scan.cpp spinbox.cpp triangle.cpp triangle_edge.cpp triangle_mesh_cloud.cpp triangle_mesh.cpp triangle_mesh_terrain.cpp triangle_mesh_viewer.cpp triangle_mesh_viewer_display.cpp vertex.cpp xyz.cpp obj/fracplanet0.4.1/ && (cd `dirname obj/fracplanet0.4.1` && $(TAR) fracplanet0.4.1.tar fracplanet0.4.1 && $(COMPRESS) fracplanet0.4.1.tar) && $(MOVE) `dirname obj/fracplanet0.4.1`/fracplanet0.4.1.tar.gz . && $(DEL_FILE) -r obj/fracplanet0.4.1


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) obj/fracplanet.gch/c obj/fracplanet.gch/c++
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


###### Prefix headers
obj/fracplanet.gch/c: precompiled.h common.h
	@$(CHK_DIR_EXISTS) obj/fracplanet.gch/ || $(MKDIR) obj/fracplanet.gch/ 
	$(CC) $(CFLAGS) $(INCPATH) -x c-header -c precompiled.h -o obj/fracplanet.gch/c

obj/fracplanet.gch/c++: precompiled.h common.h
	@$(CHK_DIR_EXISTS) obj/fracplanet.gch/ || $(MKDIR) obj/fracplanet.gch/ 
	$(CXX) $(CXXFLAGS) $(INCPATH) -x c++-header -c precompiled.h -o obj/fracplanet.gch/c++

check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc/moc_control_about.cpp moc/moc_control_render.cpp moc/moc_control_save.cpp moc/moc_control_terrain.cpp moc/moc_dialog_documentation.cpp moc/moc_fracplanet_main.cpp moc/moc_triangle_mesh_viewer_display.cpp moc/moc_triangle_mesh_viewer.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc/moc_control_about.cpp moc/moc_control_render.cpp moc/moc_control_save.cpp moc/moc_control_terrain.cpp moc/moc_dialog_documentation.cpp moc/moc_fracplanet_main.cpp moc/moc_triangle_mesh_viewer_display.cpp moc/moc_triangle_mesh_viewer.cpp
moc/moc_control_about.cpp: control.h \
		rgb.h \
		control_about.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) control_about.h -o moc/moc_control_about.cpp

moc/moc_control_render.cpp: control.h \
		rgb.h \
		parameters_render.h \
		control_render.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) control_render.h -o moc/moc_control_render.cpp

moc/moc_control_save.cpp: control.h \
		rgb.h \
		parameters_save.h \
		control_save.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) control_save.h -o moc/moc_control_save.cpp

moc/moc_control_terrain.cpp: parameters_terrain.h \
		parameters_noise.h \
		parameters_object.h \
		rgb.h \
		xyz.h \
		random.h \
		parameters_cloud.h \
		control.h \
		control_terrain.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) control_terrain.h -o moc/moc_control_terrain.cpp

moc/moc_dialog_documentation.cpp: dialog_documentation.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) dialog_documentation.h -o moc/moc_dialog_documentation.cpp

moc/moc_fracplanet_main.cpp: control_about.h \
		control.h \
		rgb.h \
		control_render.h \
		parameters_render.h \
		control_save.h \
		parameters_save.h \
		control_terrain.h \
		parameters_terrain.h \
		parameters_noise.h \
		parameters_object.h \
		xyz.h \
		random.h \
		parameters_cloud.h \
		triangle_mesh_cloud.h \
		image.h \
		triangle_mesh.h \
		geometry.h \
		scan.h \
		vertex.h \
		progress.h \
		triangle.h \
		triangle_edge.h \
		triangle_mesh_terrain.h \
		triangle_mesh_viewer.h \
		triangle_mesh_viewer_display.h \
		fracplanet_main.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) fracplanet_main.h -o moc/moc_fracplanet_main.cpp

moc/moc_triangle_mesh_viewer_display.cpp: parameters_render.h \
		rgb.h \
		random.h \
		triangle_mesh.h \
		geometry.h \
		scan.h \
		xyz.h \
		vertex.h \
		parameters_save.h \
		parameters_terrain.h \
		parameters_noise.h \
		parameters_object.h \
		progress.h \
		triangle.h \
		triangle_edge.h \
		triangle_mesh_viewer_display.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) triangle_mesh_viewer_display.h -o moc/moc_triangle_mesh_viewer_display.cpp

moc/moc_triangle_mesh_viewer.cpp: parameters_render.h \
		rgb.h \
		random.h \
		triangle_mesh.h \
		geometry.h \
		scan.h \
		xyz.h \
		vertex.h \
		parameters_save.h \
		parameters_terrain.h \
		parameters_noise.h \
		parameters_object.h \
		progress.h \
		triangle.h \
		triangle_edge.h \
		triangle_mesh_viewer_display.h \
		triangle_mesh_viewer.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) triangle_mesh_viewer.h -o moc/moc_triangle_mesh_viewer.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

obj/common.o: common.cpp precompiled.h \
		common.h \
		obj/fracplanet.gch/c++
	$(CXX) -c -include obj/fracplanet $(CXXFLAGS) $(INCPATH) -o obj/common.o common.cpp

obj/control_about.o: control_about.cpp precompiled.h \
		common.h \
		control_about.h \
		control.h \
		rgb.h \
		license.h \
		dialog_documentation.h \
		obj/fracplanet.gch/c++
	$(CXX) -c -include obj/fracplanet $(CXXFLAGS) $(INCPATH) -o obj/control_about.o control_about.cpp

obj/control.o: control.cpp precompiled.h \
		common.h \
		control.h \
		rgb.h \
		obj/fracplanet.gch/c++
	$(CXX) -c -include obj/fracplanet $(CXXFLAGS) $(INCPATH) -o obj/control.o control.cpp

obj/control_render.o: control_render.cpp precompiled.h \
		common.h \
		control_render.h \
		control.h \
		rgb.h \
		parameters_render.h \
		obj/fracplanet.gch/c++
	$(CXX) -c -include obj/fracplanet $(CXXFLAGS) $(INCPATH) -o obj/control_render.o control_render.cpp

obj/control_save.o: control_save.cpp precompiled.h \
		common.h \
		control_save.h \
		control.h \
		rgb.h \
		parameters_save.h \
		fracplanet_main.h \
		control_about.h \
		control_render.h \
		parameters_render.h \
		control_terrain.h \
		parameters_terrain.h \
		parameters_noise.h \
		parameters_object.h \
		xyz.h \
		random.h \
		parameters_cloud.h \
		triangle_mesh_cloud.h \
		image.h \
		triangle_mesh.h \
		geometry.h \
		scan.h \
		vertex.h \
		progress.h \
		triangle.h \
		triangle_edge.h \
		triangle_mesh_terrain.h \
		triangle_mesh_viewer.h \
		triangle_mesh_viewer_display.h \
		obj/fracplanet.gch/c++
	$(CXX) -c -include obj/fracplanet $(CXXFLAGS) $(INCPATH) -o obj/control_save.o control_save.cpp

obj/control_terrain.o: control_terrain.cpp precompiled.h \
		common.h \
		control_terrain.h \
		parameters_terrain.h \
		parameters_noise.h \
		parameters_object.h \
		rgb.h \
		xyz.h \
		random.h \
		parameters_cloud.h \
		control.h \
		fracplanet_main.h \
		control_about.h \
		control_render.h \
		parameters_render.h \
		control_save.h \
		parameters_save.h \
		triangle_mesh_cloud.h \
		image.h \
		triangle_mesh.h \
		geometry.h \
		scan.h \
		vertex.h \
		progress.h \
		triangle.h \
		triangle_edge.h \
		triangle_mesh_terrain.h \
		triangle_mesh_viewer.h \
		triangle_mesh_viewer_display.h \
		spinbox.h \
		obj/fracplanet.gch/c++
	$(CXX) -c -include obj/fracplanet $(CXXFLAGS) $(INCPATH) -o obj/control_terrain.o control_terrain.cpp

obj/dialog_documentation.o: dialog_documentation.cpp precompiled.h \
		common.h \
		dialog_documentation.h \
		usage_text.h \
		obj/fracplanet.gch/c++
	$(CXX) -c -include obj/fracplanet $(CXXFLAGS) $(INCPATH) -o obj/dialog_documentation.o dialog_documentation.cpp

obj/fracplanet.o: fracplanet.cpp precompiled.h \
		common.h \
		fracplanet_main.h \
		control_about.h \
		control.h \
		rgb.h \
		control_render.h \
		parameters_render.h \
		control_save.h \
		parameters_save.h \
		control_terrain.h \
		parameters_terrain.h \
		parameters_noise.h \
		parameters_object.h \
		xyz.h \
		random.h \
		parameters_cloud.h \
		triangle_mesh_cloud.h \
		image.h \
		triangle_mesh.h \
		geometry.h \
		scan.h \
		vertex.h \
		progress.h \
		triangle.h \
		triangle_edge.h \
		triangle_mesh_terrain.h \
		triangle_mesh_viewer.h \
		triangle_mesh_viewer_display.h \
		obj/fracplanet.gch/c++
	$(CXX) -c -include obj/fracplanet $(CXXFLAGS) $(INCPATH) -o obj/fracplanet.o fracplanet.cpp

obj/fracplanet_main.o: fracplanet_main.cpp precompiled.h \
		common.h \
		fracplanet_main.h \
		control_about.h \
		control.h \
		rgb.h \
		control_render.h \
		parameters_render.h \
		control_save.h \
		parameters_save.h \
		control_terrain.h \
		parameters_terrain.h \
		parameters_noise.h \
		parameters_object.h \
		xyz.h \
		random.h \
		parameters_cloud.h \
		triangle_mesh_cloud.h \
		image.h \
		triangle_mesh.h \
		geometry.h \
		scan.h \
		vertex.h \
		progress.h \
		triangle.h \
		triangle_edge.h \
		triangle_mesh_terrain.h \
		triangle_mesh_viewer.h \
		triangle_mesh_viewer_display.h \
		obj/fracplanet.gch/c++
	$(CXX) -c -include obj/fracplanet $(CXXFLAGS) $(INCPATH) -o obj/fracplanet_main.o fracplanet_main.cpp

obj/geometry.o: geometry.cpp precompiled.h \
		common.h \
		geometry.h \
		scan.h \
		xyz.h \
		random.h \
		vertex.h \
		rgb.h \
		obj/fracplanet.gch/c++
	$(CXX) -c -include obj/fracplanet $(CXXFLAGS) $(INCPATH) -o obj/geometry.o geometry.cpp

obj/image.o: image.cpp precompiled.h \
		common.h \
		image.h \
		rgb.h \
		progress.h \
		obj/fracplanet.gch/c++
	$(CXX) -c -include obj/fracplanet $(CXXFLAGS) $(INCPATH) -o obj/image.o image.cpp

obj/license.o: license.cpp precompiled.h \
		common.h \
		license.h \
		obj/fracplanet.gch/c++
	$(CXX) -c -include obj/fracplanet $(CXXFLAGS) $(INCPATH) -o obj/license.o license.cpp

obj/matrix33.o: matrix33.cpp precompiled.h \
		common.h \
		matrix33.h \
		xyz.h \
		random.h \
		obj/fracplanet.gch/c++
	$(CXX) -c -include obj/fracplanet $(CXXFLAGS) $(INCPATH) -o obj/matrix33.o matrix33.cpp

obj/matrix34.o: matrix34.cpp precompiled.h \
		common.h \
		matrix34.h \
		matrix33.h \
		xyz.h \
		random.h \
		obj/fracplanet.gch/c++
	$(CXX) -c -include obj/fracplanet $(CXXFLAGS) $(INCPATH) -o obj/matrix34.o matrix34.cpp

obj/noise.o: noise.cpp precompiled.h \
		common.h \
		noise.h \
		xyz.h \
		random.h \
		obj/fracplanet.gch/c++
	$(CXX) -c -include obj/fracplanet $(CXXFLAGS) $(INCPATH) -o obj/noise.o noise.cpp

obj/parameters_cloud.o: parameters_cloud.cpp precompiled.h \
		common.h \
		parameters_cloud.h \
		parameters_object.h \
		rgb.h \
		xyz.h \
		random.h \
		obj/fracplanet.gch/c++
	$(CXX) -c -include obj/fracplanet $(CXXFLAGS) $(INCPATH) -o obj/parameters_cloud.o parameters_cloud.cpp

obj/parameters_noise.o: parameters_noise.cpp precompiled.h \
		common.h \
		parameters_noise.h \
		obj/fracplanet.gch/c++
	$(CXX) -c -include obj/fracplanet $(CXXFLAGS) $(INCPATH) -o obj/parameters_noise.o parameters_noise.cpp

obj/parameters_object.o: parameters_object.cpp precompiled.h \
		common.h \
		parameters_object.h \
		obj/fracplanet.gch/c++
	$(CXX) -c -include obj/fracplanet $(CXXFLAGS) $(INCPATH) -o obj/parameters_object.o parameters_object.cpp

obj/parameters_render.o: parameters_render.cpp precompiled.h \
		common.h \
		parameters_render.h \
		rgb.h \
		xyz.h \
		random.h \
		obj/fracplanet.gch/c++
	$(CXX) -c -include obj/fracplanet $(CXXFLAGS) $(INCPATH) -o obj/parameters_render.o parameters_render.cpp

obj/parameters_save.o: parameters_save.cpp precompiled.h \
		common.h \
		parameters_save.h \
		obj/fracplanet.gch/c++
	$(CXX) -c -include obj/fracplanet $(CXXFLAGS) $(INCPATH) -o obj/parameters_save.o parameters_save.cpp

obj/parameters_terrain.o: parameters_terrain.cpp precompiled.h \
		common.h \
		parameters_terrain.h \
		parameters_noise.h \
		parameters_object.h \
		rgb.h \
		xyz.h \
		random.h \
		obj/fracplanet.gch/c++
	$(CXX) -c -include obj/fracplanet $(CXXFLAGS) $(INCPATH) -o obj/parameters_terrain.o parameters_terrain.cpp

obj/progress.o: progress.cpp precompiled.h \
		common.h \
		progress.h \
		obj/fracplanet.gch/c++
	$(CXX) -c -include obj/fracplanet $(CXXFLAGS) $(INCPATH) -o obj/progress.o progress.cpp

obj/random.o: random.cpp precompiled.h \
		common.h \
		random.h \
		obj/fracplanet.gch/c++
	$(CXX) -c -include obj/fracplanet $(CXXFLAGS) $(INCPATH) -o obj/random.o random.cpp

obj/rgb.o: rgb.cpp precompiled.h \
		common.h \
		rgb.h \
		obj/fracplanet.gch/c++
	$(CXX) -c -include obj/fracplanet $(CXXFLAGS) $(INCPATH) -o obj/rgb.o rgb.cpp

obj/scan.o: scan.cpp precompiled.h \
		common.h \
		scan.h \
		xyz.h \
		random.h \
		obj/fracplanet.gch/c++
	$(CXX) -c -include obj/fracplanet $(CXXFLAGS) $(INCPATH) -o obj/scan.o scan.cpp

obj/spinbox.o: spinbox.cpp precompiled.h \
		common.h \
		spinbox.h \
		obj/fracplanet.gch/c++
	$(CXX) -c -include obj/fracplanet $(CXXFLAGS) $(INCPATH) -o obj/spinbox.o spinbox.cpp

obj/triangle.o: triangle.cpp precompiled.h \
		common.h \
		triangle.h \
		rgb.h \
		xyz.h \
		random.h \
		obj/fracplanet.gch/c++
	$(CXX) -c -include obj/fracplanet $(CXXFLAGS) $(INCPATH) -o obj/triangle.o triangle.cpp

obj/triangle_edge.o: triangle_edge.cpp precompiled.h \
		common.h \
		triangle_edge.h \
		obj/fracplanet.gch/c++
	$(CXX) -c -include obj/fracplanet $(CXXFLAGS) $(INCPATH) -o obj/triangle_edge.o triangle_edge.cpp

obj/triangle_mesh_cloud.o: triangle_mesh_cloud.cpp precompiled.h \
		common.h \
		triangle_mesh_cloud.h \
		image.h \
		rgb.h \
		parameters_cloud.h \
		parameters_object.h \
		xyz.h \
		random.h \
		triangle_mesh.h \
		geometry.h \
		scan.h \
		vertex.h \
		parameters_save.h \
		parameters_terrain.h \
		parameters_noise.h \
		progress.h \
		triangle.h \
		triangle_edge.h \
		noise.h \
		matrix34.h \
		matrix33.h \
		parameters_render.h \
		obj/fracplanet.gch/c++
	$(CXX) -c -include obj/fracplanet $(CXXFLAGS) $(INCPATH) -o obj/triangle_mesh_cloud.o triangle_mesh_cloud.cpp

obj/triangle_mesh.o: triangle_mesh.cpp precompiled.h \
		common.h \
		triangle_mesh.h \
		geometry.h \
		scan.h \
		xyz.h \
		random.h \
		vertex.h \
		rgb.h \
		parameters_save.h \
		parameters_terrain.h \
		parameters_noise.h \
		parameters_object.h \
		progress.h \
		triangle.h \
		triangle_edge.h \
		obj/fracplanet.gch/c++
	$(CXX) -c -include obj/fracplanet $(CXXFLAGS) $(INCPATH) -o obj/triangle_mesh.o triangle_mesh.cpp

obj/triangle_mesh_terrain.o: triangle_mesh_terrain.cpp precompiled.h \
		common.h \
		triangle_mesh_terrain.h \
		image.h \
		rgb.h \
		parameters_terrain.h \
		parameters_noise.h \
		parameters_object.h \
		xyz.h \
		random.h \
		triangle_mesh.h \
		geometry.h \
		scan.h \
		vertex.h \
		parameters_save.h \
		progress.h \
		triangle.h \
		triangle_edge.h \
		noise.h \
		obj/fracplanet.gch/c++
	$(CXX) -c -include obj/fracplanet $(CXXFLAGS) $(INCPATH) -o obj/triangle_mesh_terrain.o triangle_mesh_terrain.cpp

obj/triangle_mesh_viewer.o: triangle_mesh_viewer.cpp precompiled.h \
		common.h \
		triangle_mesh_viewer.h \
		parameters_render.h \
		rgb.h \
		random.h \
		triangle_mesh.h \
		geometry.h \
		scan.h \
		xyz.h \
		vertex.h \
		parameters_save.h \
		parameters_terrain.h \
		parameters_noise.h \
		parameters_object.h \
		progress.h \
		triangle.h \
		triangle_edge.h \
		triangle_mesh_viewer_display.h \
		obj/fracplanet.gch/c++
	$(CXX) -c -include obj/fracplanet $(CXXFLAGS) $(INCPATH) -o obj/triangle_mesh_viewer.o triangle_mesh_viewer.cpp

obj/triangle_mesh_viewer_display.o: triangle_mesh_viewer_display.cpp precompiled.h \
		common.h \
		triangle_mesh_viewer_display.h \
		parameters_render.h \
		rgb.h \
		random.h \
		triangle_mesh.h \
		geometry.h \
		scan.h \
		xyz.h \
		vertex.h \
		parameters_save.h \
		parameters_terrain.h \
		parameters_noise.h \
		parameters_object.h \
		progress.h \
		triangle.h \
		triangle_edge.h \
		matrix33.h \
		triangle_mesh_viewer.h \
		obj/fracplanet.gch/c++
	$(CXX) -c -include obj/fracplanet $(CXXFLAGS) $(INCPATH) -o obj/triangle_mesh_viewer_display.o triangle_mesh_viewer_display.cpp

obj/vertex.o: vertex.cpp precompiled.h \
		common.h \
		vertex.h \
		rgb.h \
		xyz.h \
		random.h \
		obj/fracplanet.gch/c++
	$(CXX) -c -include obj/fracplanet $(CXXFLAGS) $(INCPATH) -o obj/vertex.o vertex.cpp

obj/xyz.o: xyz.cpp precompiled.h \
		common.h \
		xyz.h \
		random.h \
		obj/fracplanet.gch/c++
	$(CXX) -c -include obj/fracplanet $(CXXFLAGS) $(INCPATH) -o obj/xyz.o xyz.cpp

obj/moc_control_about.o: moc/moc_control_about.cpp obj/fracplanet.gch/c++
	$(CXX) -c -include obj/fracplanet $(CXXFLAGS) $(INCPATH) -o obj/moc_control_about.o moc/moc_control_about.cpp

obj/moc_control_render.o: moc/moc_control_render.cpp obj/fracplanet.gch/c++
	$(CXX) -c -include obj/fracplanet $(CXXFLAGS) $(INCPATH) -o obj/moc_control_render.o moc/moc_control_render.cpp

obj/moc_control_save.o: moc/moc_control_save.cpp obj/fracplanet.gch/c++
	$(CXX) -c -include obj/fracplanet $(CXXFLAGS) $(INCPATH) -o obj/moc_control_save.o moc/moc_control_save.cpp

obj/moc_control_terrain.o: moc/moc_control_terrain.cpp obj/fracplanet.gch/c++
	$(CXX) -c -include obj/fracplanet $(CXXFLAGS) $(INCPATH) -o obj/moc_control_terrain.o moc/moc_control_terrain.cpp

obj/moc_dialog_documentation.o: moc/moc_dialog_documentation.cpp obj/fracplanet.gch/c++
	$(CXX) -c -include obj/fracplanet $(CXXFLAGS) $(INCPATH) -o obj/moc_dialog_documentation.o moc/moc_dialog_documentation.cpp

obj/moc_fracplanet_main.o: moc/moc_fracplanet_main.cpp obj/fracplanet.gch/c++
	$(CXX) -c -include obj/fracplanet $(CXXFLAGS) $(INCPATH) -o obj/moc_fracplanet_main.o moc/moc_fracplanet_main.cpp

obj/moc_triangle_mesh_viewer_display.o: moc/moc_triangle_mesh_viewer_display.cpp obj/fracplanet.gch/c++
	$(CXX) -c -include obj/fracplanet $(CXXFLAGS) $(INCPATH) -o obj/moc_triangle_mesh_viewer_display.o moc/moc_triangle_mesh_viewer_display.cpp

obj/moc_triangle_mesh_viewer.o: moc/moc_triangle_mesh_viewer.cpp obj/fracplanet.gch/c++
	$(CXX) -c -include obj/fracplanet $(CXXFLAGS) $(INCPATH) -o obj/moc_triangle_mesh_viewer.o moc/moc_triangle_mesh_viewer.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

